@{
    ViewData["Title"] = "Payment Page";
}

<h2>Payment Page</h2>

<p>Order ID: @ViewBag.RazorpayOrderId</p>
<p>Amount: @ViewBag.Amount</p>
<p>Currency: @ViewBag.Currency</p>

<form id="paymentForm" action="/Payments/VerifyPayment" method="post">
    <input type="hidden" name="razorpay_payment_id" id="razorpay_payment_id">
    <input type="hidden" name="razorpay_order_id" id="razorpay_order_id" value="@ViewBag.RazorpayOrderId">
    <input type="hidden" name="razorpay_signature" id="razorpay_signature">
    <input type="hidden" name="amount" id="amount" value="@ViewBag.Amount">
    <input type="hidden" name="currency" id="currency" value="@ViewBag.Currency">
    <input type="hidden" name="name" id="name" value="@ViewBag.Name">
    <input type="hidden" name="email" id="email" value="@ViewBag.Email">
    <input type="hidden" name="description" id="description" value="@ViewBag.Description">

    <button id="rzp-button1" type="button">Pay with Razorpay</button>
</form>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    var options = {
        "key": "@ViewBag.RazorpayKey",
        "amount": "@ViewBag.Amount", // Amount is in currency subunits. Default is INR.
        "currency": "@ViewBag.Currency",
        "name": "@ViewBag.Name",
        "description": "@ViewBag.Description",
        "order_id": "@ViewBag.RazorpayOrderId", // This is the Order ID returned by Razorpay.
        "handler": function (response) {
            // This function handles the payment success
            document.getElementById('razorpay_payment_id').value = response.razorpay_payment_id;
            document.getElementById('razorpay_order_id').value = response.razorpay_order_id;
            document.getElementById('razorpay_signature').value = response.razorpay_signature;

            // Submit the form
            document.getElementById('paymentForm').submit();
        },
        "prefill": {
            "name": "@ViewBag.Name",
            "email": "@ViewBag.Email"
        },
        "theme": {
            "color": "#F37254"
        }
    };

    var rzp1 = new Razorpay(options);
    rzp1.on('payment.failed', function (response) {
        // Capture the payment details even if the payment fails
        document.getElementById('razorpay_payment_id').value = response.error.metadata.payment_id;
        document.getElementById('razorpay_order_id').value = response.error.metadata.order_id;
        document.getElementById('razorpay_signature').value = '';

        // Optionally alert the user about the failure
        alert("Payment failed: " + response.error.description);

        // Submit the form to handle payment failure on the server
        document.getElementById('paymentForm').submit();
    });

    document.getElementById('rzp-button1').onclick = function (e) {
        rzp1.open();
        e.preventDefault();
    }
</script>
